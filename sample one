import './Notification.css';

function Notifications() {
  return (
    <div className="Notification">
      <header className="Notification-header">
        <h1>Notification</h1>
      </header>
    </div>
  );
}

export default Notifications;
////////////request form-\

import React, { useState } from 'react';
import axios from 'axios';

const RequestForm = ({ onSuccess }) => {
  const [formData, setFormData] = useState({
    machine_code: '',
    department: '',
    type: '',
    description: '',
    spare_parts: ['']
  });

  const handleChange = (e, index = null) => {
    if (index !== null) {
      const parts = [...formData.spare_parts];
      parts[index] = e.target.value;
      setFormData({ ...formData, spare_parts: parts });
    } else {
      setFormData({ ...formData, [e.target.name]: e.target.value });
    }
  };

  const addSparePart = () => {
    setFormData({ ...formData, spare_parts: [...formData.spare_parts, ''] });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    await axios.post('http://localhost:3001/requests', formData);
    onSuccess();
    setFormData({
      machine_code: '',
      department: '',
      type: '',
      description: '',
      spare_parts: ['']
    });
  };

  return (
    <form onSubmit={handleSubmit}>
      <h2>Requests Form</h2>
      <input name="machine_code" placeholder="Machine Code" value={formData.machine_code} onChange={handleChange} required />
      <input name="department" placeholder="Department" value={formData.department} onChange={handleChange} required />
      <input name="type" placeholder="Type" value={formData.type} onChange={handleChange} required />
      <textarea name="description" placeholder="Description" value={formData.description} onChange={handleChange} required />
      {formData.spare_parts.map((part, index) => (
        <input
          key={index}
          placeholder={`Spare Part ${index + 1}`}
          value={part}
          onChange={(e) => handleChange(e, index)}
        />
      ))}
      <button type="button" onClick={addSparePart}>+ Add Spare Parts</button>
      <button type="submit">Send Request</button>
    </form>
  );
};

export default RequestForm;

//////request table
import React, { useEffect, useState } from 'react';
import axios from 'axios';

const RequestTable = () => {
  const [requests, setRequests] = useState([]);

  const fetchRequests = async () => {
    const res = await axios.get('http://localhost:3001/requests');
    setRequests(res.data);
  };

  const deleteRequest = async (id) => {
    await axios.delete(`http://localhost:3001/requests/${id}`);
    fetchRequests();
  };

  useEffect(() => {
    fetchRequests();
  }, []);

  return (
    <div>
      <h2>Requests</h2>
      <table border="1">
        <thead>
          <tr>
            <th>ID</th><th>Department</th><th>Machine Code</th><th>Type</th><th>Description</th><th>Spare Parts</th><th>Action</th>
          </tr>
        </thead>
        <tbody>
          {requests.map(r => (
            <tr key={r.id}>
              <td>{r.id}</td>
              <td>{r.department}</td>
              <td>{r.machine_code}</td>
              <td>{r.type}</td>
              <td>{r.description}</td>
              <td>{JSON.parse(r.spare_parts).join(', ')}</td>
              <td>
                <button onClick={() => deleteRequest(r.id)}>Delete</button>
                {/* Add Edit modal here if needed */}
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

export default RequestTable;
/////jx
import React from 'react';
import RequestForm from './components/RequestForm';
import RequestTable from './components/RequestTable';

const App = () => {
  const [reload, setReload] = React.useState(false);

  const refresh = () => setReload(!reload);

  return (
    <div>
      <RequestForm onSuccess={refresh} />
      <RequestTable key={reload} />
    </div>
  );
};

export default App;
//db
CREATE DATABASE maintenance_system;

USE maintenance_system;

CREATE TABLE requests (
    id INT AUTO_INCREMENT PRIMARY KEY,
    machine_code VARCHAR(255),
    department VARCHAR(255),
    type VARCHAR(255),
    description TEXT,
    spare_parts TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
//backend
const express = require('express');
const cors = require('cors');
const mysql = require('mysql2');
const app = express();

app.use(cors());
app.use(express.json());

// MySQL connection
const db = mysql.createConnection({
    host: 'localhost',
    user: 'root',
    password: '', // your MySQL password
    database: 'maintenance_system'
});

// Insert request
app.post('/requests', (req, res) => {
    const { machine_code, department, type, description, spare_parts } = req.body;
    const sql = 'INSERT INTO requests (machine_code, department, type, description, spare_parts) VALUES (?, ?, ?, ?, ?)';
    db.query(sql, [machine_code, department, type, description, JSON.stringify(spare_parts)], (err, result) => {
        if (err) return res.status(500).send(err);
        res.send('Request added successfully');
    });
});

// Get all requests
app.get('/requests', (req, res) => {
    db.query('SELECT * FROM requests', (err, result) => {
        if (err) return res.status(500).send(err);
        res.json(result);
    });
});

// Delete request
app.delete('/requests/:id', (req, res) => {
    const sql = 'DELETE FROM requests WHERE id = ?';
    db.query(sql, [req.params.id], (err, result) => {
        if (err) return res.status(500).send(err);
        res.send('Deleted successfully');
    });
});

// Update request
app.put('/requests/:id', (req, res) => {
    const { machine_code, department, type, description, spare_parts } = req.body;
    const sql = 'UPDATE requests SET machine_code=?, department=?, type=?, description=?, spare_parts=? WHERE id=?';
    db.query(sql, [machine_code, department, type, description, JSON.stringify(spare_parts), req.params.id], (err, result) => {
        if (err) return res.status(500).send(err);
        res.send('Updated successfully');
    });
});

app.listen(3001, () => {
    console.log('Server is running on port 3001');
});


